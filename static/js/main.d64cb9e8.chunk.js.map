{"version":3,"sources":["components/Header/index.js","utils/conversion.js","App/index.js","index.js"],"names":["Header","cb","Clipboard","success","document","querySelector","on","e","classList","add","setTimeout","remove","clearSelection","className","data-clipboard-text","this","props","hslVal","rgbVal","hexVal","React","Component","HSLToRGB","h","s","l","c","Math","abs","x","m","r","g","b","round","HSLToHex","toString","length","docStyle","documentElement","style","randomNumber","max","floor","random","App","newColor","bind","setDocVars","state","hue","saturation","lightness","setProperty","setState","headerHeight","clientHeight","onClick","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d64cb9e8.chunk.js","sourcesContent":["import React from 'react';\nimport Clipboard from 'clipboard';\nimport './Header.css';\n\nclass Header extends React.Component {\n  componentDidMount() {\n    const cb = new Clipboard('.btn');\n    const success = document.querySelector('.success');\n    cb.on('success', (e) => {\n      success.classList.add('open');\n\n      setTimeout(() => {\n        success.classList.remove('open');\n      }, 2000)\n\n      e.clearSelection();\n    });\n  }\n\n  render() {\n    return (\n      <header className=\"site-header\">\n        <h2>iridescent</h2>\n        <button className=\"btn btn-hsl\" data-clipboard-text={this.props.hslVal}>{this.props.hslVal}</button>\n        <button className=\"btn btn-rgb\" data-clipboard-text={this.props.rgbVal}>{this.props.rgbVal}</button>\n        <button className=\"btn btn-hex\" data-clipboard-text={this.props.hexVal}>{this.props.hexVal}</button>\n        <p>Find your color.</p>\n        <div className=\"success\">\n          <span>Copied!</span>\n        </div>\n      </header>\n    )\n  }\n}\n\nexport default Header;\n","/**\n * HSL to RGB converter\n * \n * @param {Int} h \n * @param {Int} s \n * @param {Int} l \n */\n\nexport function HSLToRGB(h,s,l) {\n  // Must be fractions of 1\n  s /= 100;\n  l /= 100;\n\n  let c = (1 - Math.abs(2 * l - 1)) * s,\n      x = c * (1 - Math.abs((h / 60) % 2 - 1)),\n      m = l - c/2,\n      r = 0,\n      g = 0,\n      b = 0;\n\n  if (0 <= h && h < 60) {\n    r = c; g = x; b = 0;\n  } else if (60 <= h && h < 120) {\n    r = x; g = c; b = 0;\n  } else if (120 <= h && h < 180) {\n    r = 0; g = c; b = x;\n  } else if (180 <= h && h < 240) {\n    r = 0; g = x; b = c;\n  } else if (240 <= h && h < 300) {\n    r = x; g = 0; b = c;\n  } else if (300 <= h && h < 360) {\n    r = c; g = 0; b = x;\n  }\n  r = Math.round((r + m) * 255);\n  g = Math.round((g + m) * 255);\n  b = Math.round((b + m) * 255);\n\n  return `rgb(${r}, ${g}, ${b})`;\n}\n\n/**\n * HSL to HEX converter\n * \n * @param {Int} h \n * @param {Int} s \n * @param {Int} l \n */\nexport function HSLToHex(h,s,l) {\n  s /= 100;\n  l /= 100;\n\n  let c = (1 - Math.abs(2 * l - 1)) * s,\n      x = c * (1 - Math.abs((h / 60) % 2 - 1)),\n      m = l - c/2,\n      r = 0,\n      g = 0,\n      b = 0;\n\n  if (0 <= h && h < 60) {\n    r = c; g = x; b = 0;\n  } else if (60 <= h && h < 120) {\n    r = x; g = c; b = 0;\n  } else if (120 <= h && h < 180) {\n    r = 0; g = c; b = x;\n  } else if (180 <= h && h < 240) {\n    r = 0; g = x; b = c;\n  } else if (240 <= h && h < 300) {\n    r = x; g = 0; b = c;\n  } else if (300 <= h && h < 360) {\n    r = c; g = 0; b = x;\n  }\n  // Having obtained RGB, convert channels to hex\n  r = Math.round((r + m) * 255).toString(16);\n  g = Math.round((g + m) * 255).toString(16);\n  b = Math.round((b + m) * 255).toString(16);\n\n  // Prepend 0s, if necessary\n  if (r.length === 1)\n    r = \"0\" + r;\n  if (g.length === 1)\n    g = \"0\" + g;\n  if (b.length === 1)\n    b = \"0\" + b;\n\n  return \"#\" + r + g + b;\n}\n\nexport default {\n  HSLToRGB\n}","import React from 'react';\nimport Header from '../components/Header/'\nimport { HSLToRGB, HSLToHex } from '../utils/conversion';\n\nconst docStyle = document.documentElement.style;\n\nfunction randomNumber(max) {\n  return Math.floor(Math.random() * Math.floor(max))\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.newColor = this.newColor.bind(this);\n    this.setDocVars = this.setDocVars.bind(this);\n\n    this.state = {\n      hue: randomNumber(360),\n      saturation: randomNumber(100),\n      lightness: randomNumber(100)\n    }\n  }\n\n  setDocVars() {\n    docStyle.setProperty('--hue', this.state.hue);\n    docStyle.setProperty('--saturation', `${this.state.saturation}%`);\n    docStyle.setProperty('--lightness', `${this.state.lightness}%`);\n    docStyle.setProperty('--lightness-ops', `${this.state.lightness > 50 ? this.state.lightness - 50 : this.state.lightness + 50}%`);\n  }\n\n  newColor() {\n    this.setState({\n      hue: randomNumber(360),\n      saturation: randomNumber(100),\n      lightness: randomNumber(100)\n    });\n  }\n\n  componentDidMount() {\n    const headerHeight = document.querySelector('.site-header').clientHeight;\n    docStyle.setProperty('--header-height', `${headerHeight}px`);\n\n    this.setDocVars();\n  }\n\n  componentDidUpdate() {\n    this.setDocVars();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header\n          hslVal={`hsl(${this.state.hue}, ${this.state.saturation}%, ${this.state.lightness}%)`}\n          rgbVal={HSLToRGB(this.state.hue, this.state.saturation, this.state.lightness)}\n          hexVal={HSLToHex(this.state.hue, this.state.saturation, this.state.lightness)}\n        />\n        <main>\n          <button className=\"btn btn-opposite\" onClick={this.newColor}>New Color</button>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}